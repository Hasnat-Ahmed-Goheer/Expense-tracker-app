{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chhsy\\\\OneDrive\\\\Documents\\\\My Projects\\\\Web Development\\\\React\\\\Practice\\\\expense-tracker\\\\src\\\\components\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Expenses.css';\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from './Card/Card';\nimport ExpenseFilter from './ExpenseFilter/ExpenseFilter';\nimport ExpenseList from './ExpenseList';\nimport ExpenseChart from './ExpensesChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [year, setYear] = useState('2021');\n  const filterChangeHandler = selectedYear => {\n    setYear(selectedYear);\n  };\n  const filteredYears = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === year;\n  });\n\n  // array doesn,t have to be deconstructed to be used as a JSX element as shown below meaning that {<array>} can be used as is and React will render it by itself NICE!!\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: year,\n      onDropFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseChart, {\n      dataPoints: expn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n      filteredYears: filteredYears\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Expenses, \"/8s9qxiHzfqw+ybaEYw1xHRtayM=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpenseFilter","ExpenseList","ExpenseChart","Expenses","props","year","setYear","filterChangeHandler","selectedYear","filteredYears","expenses","filter","expense","date","getFullYear","toString","expn"],"sources":["C:/Users/chhsy/OneDrive/Documents/My Projects/Web Development/React/Practice/expense-tracker/src/components/Expenses.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport './Expenses.css';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from './Card/Card';\r\nimport ExpenseFilter from './ExpenseFilter/ExpenseFilter';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpenseChart from './ExpensesChart';\r\n\r\nfunction Expenses(props){\r\n\r\n  const [year,setYear] = useState('2021');\r\n  const filterChangeHandler = (selectedYear) => {\r\n  setYear(selectedYear);\r\n  }\r\n  const filteredYears = props.expenses.filter((expense)=>{ return expense.date.getFullYear().toString() === year});\r\n\r\n  \r\n    // array doesn,t have to be deconstructed to be used as a JSX element as shown below meaning that {<array>} can be used as is and React will render it by itself NICE!!\r\n  return(\r\n        <Card className='expenses'>\r\n     <ExpenseFilter selected ={year} onDropFilter = {filterChangeHandler}/>\r\n     <ExpenseChart dataPoints ={expn}/>\r\n        <ExpenseList filteredYears ={filteredYears}/>\r\n\r\n        \r\n        {/* we can use the teritary conditonals for this too like\r\n        filterYears.length === 0 ? <p></p> : filterYears.map(); */\r\n       /* <ExpenseItem\r\n        id={props.expenses[0].id}\r\n        title={props.expenses[0].title}\r\n        amount={props.expenses[0].amount}\r\n        date={props.expenses[0].date}\r\n      ></ExpenseItem>\r\n      <ExpenseItem\r\n        id={props.expenses[1].id}\r\n        title={props.expenses[1].title}\r\n        amount={props.expenses[1].amount}\r\n        date={props.expenses[1].date}\r\n      ></ExpenseItem>\r\n      <ExpenseItem\r\n        id={props.expenses[2].id}\r\n        title={props.expenses[2].title}\r\n        amount={props.expenses[2].amount}\r\n        date={props.expenses[2].date}\r\n      ></ExpenseItem>\r\n      <ExpenseItem\r\n        id={props.expenses[3].id}\r\n        title={props.expenses[3].title}\r\n        amount={props.expenses[3].amount}\r\n        date={props.expenses[3].date}\r\n      ></ExpenseItem> */}\r\n     \r\n    </Card>\r\n );\r\n\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,iBAAiB;AAAC;AAE3C,SAASC,QAAQ,CAACC,KAAK,EAAC;EAAA;EAEtB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EACvC,MAAMU,mBAAmB,GAAIC,YAAY,IAAK;IAC9CF,OAAO,CAACE,YAAY,CAAC;EACrB,CAAC;EACD,MAAMC,aAAa,GAAGL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAEC,OAAO,IAAG;IAAE,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKV,IAAI;EAAA,CAAC,CAAC;;EAG9G;EACF,oBACM,QAAC,IAAI;IAAC,SAAS,EAAC,UAAU;IAAA,wBAC7B,QAAC,aAAa;MAAC,QAAQ,EAAGA,IAAK;MAAC,YAAY,EAAIE;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAE,eACtE,QAAC,YAAY;MAAC,UAAU,EAAGS;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/B,QAAC,WAAW;MAAC,aAAa,EAAGP;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QA8B1C;AAGX;AAAC,GA/CQN,QAAQ;AAAA,KAARA,QAAQ;AAiDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}