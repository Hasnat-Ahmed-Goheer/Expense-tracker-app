{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chhsy\\\\OneDrive\\\\Documents\\\\My Projects\\\\Web Development\\\\React\\\\Practice\\\\expense-tracker\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  const titleHandler = event => {\n    console.log(event.target.value);\n    setEnteredTitle(event.target.value);\n  };\n  const amountHandler = event => {\n    console.log(event.target.value);\n    setEnteredAmount(event.target.value);\n  };\n  const dateHandler = event => {\n    console.log(event.target.value);\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n  };\n\n  // one way of writing the useState hook to call each state change individually and the other is to call all the state changes together as shown below\n  // const [userInput,setUserInput] = useState({\n  //     enteredTitle:'',\n  //     enteredAmount: '',\n  //     enteredDate:'',\n  // });\n  // another way to call the event listener function is the following for every function\n  //    const titleHandler = (event) =>{\n  //   setUserInput({\n  //     ...userInput,\n  //     enteredTitle:event.target.value,\n  //   })\n  // }\n  // const amountHandler = (event) =>{\n  //    setUserInput({\n  //     ...userInput,\n  //     enteredAmount:event.target.value,\n  //   })\n  // }\n  // same for the date too but if the function depends on the previous state then we should not use the above method but instead do it in the form of a function\n  // const dateHandler = (event) =>{\n  //    setUserInput( (prevState) =>{\n  //    return {...prevState,\n  //     enteredDate:event.target.value,}\n  //   })\n  //   this method ensures that the state it receives is always the latest prev snapshot of the state and then we can easily work with it\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter the Amount\",\n          value: \"\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"01-01-2020\",\n          max: \"31-12-2023\",\n          onChange: dateHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }, this);\n};\n_s(ExpenseForm, \"sPl3hHJ0hPqwAiAS86pYldA5b1E=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleHandler","event","console","log","target","value","amountHandler","dateHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date"],"sources":["C:/Users/chhsy/OneDrive/Documents/My Projects/Web Development/React/Practice/expense-tracker/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = () =>{\r\n   \r\n\r\n\r\n    const [enteredTitle,setEnteredTitle] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const [enteredDate,setEnteredDate] = useState('');\r\n\r\n    const titleHandler = (event) =>{\r\n        console.log(event.target.value);\r\n        setEnteredTitle(event.target.value)\r\n    }\r\n    const amountHandler = (event) =>{\r\n        console.log(event.target.value);\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n    const dateHandler = (event) =>{\r\n        console.log(event.target.value);\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n        \r\n        const expenseData = {\r\n            title : enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        }\r\n        console.log(expenseData);\r\n    }\r\n\r\n     // one way of writing the useState hook to call each state change individually and the other is to call all the state changes together as shown below\r\n    // const [userInput,setUserInput] = useState({\r\n    //     enteredTitle:'',\r\n    //     enteredAmount: '',\r\n    //     enteredDate:'',\r\n    // });\r\n    // another way to call the event listener function is the following for every function\r\n    //    const titleHandler = (event) =>{\r\n    //   setUserInput({\r\n    //     ...userInput,\r\n    //     enteredTitle:event.target.value,\r\n    //   })\r\n    // }\r\n    // const amountHandler = (event) =>{\r\n    //    setUserInput({\r\n    //     ...userInput,\r\n    //     enteredAmount:event.target.value,\r\n    //   })\r\n    // }\r\n    // same for the date too but if the function depends on the previous state then we should not use the above method but instead do it in the form of a function\r\n    // const dateHandler = (event) =>{\r\n    //    setUserInput( (prevState) =>{\r\n    //    return {...prevState,\r\n    //     enteredDate:event.target.value,}\r\n    //   })\r\n    //   this method ensures that the state it receives is always the latest prev snapshot of the state and then we can easily work with it\r\n    \r\n    return (<form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label >Title</label>\r\n                <input type=\"text\" onChange={titleHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label >Amount</label>\r\n                <input type=\"number\" placeholder=\"Enter the Amount\" value='' min='0.01' step='0.01' onChange={amountHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label >Date</label>\r\n                <input type=\"date\" min='01-01-2020' max= '31-12-2023' onChange={dateHandler} />\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>)\r\n\r\n };\r\n\r\n\r\n    export default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}