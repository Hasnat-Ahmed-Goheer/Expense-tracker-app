{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chhsy\\\\OneDrive\\\\Documents\\\\My Projects\\\\Web Development\\\\React\\\\Practice\\\\expense-tracker\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  // const titleHandler = (event) =>{\n  //     console.log(event.target.value);\n  //     setEnteredTitle(event.target.value)\n  // }\n  // const amountHandler = (event) =>{\n  //     console.log(event.target.value);\n  //     setEnteredAmount(event.target.value);\n  // }\n  // const dateHandler = (event) =>{\n  //     console.log(event.target.value);\n  //     setEnteredDate(event.target.value);\n  // }\n\n  // one way of writng the useState hook to call each state change individually and the other is to call all the state changes together as shown below\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: ''\n  });\n  // another way to call the event listener function is the following for every function\n  const titleHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredTitle: event.target.value\n    });\n  };\n  const amountHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredAmount: event.target.value\n    });\n  };\n  // same for the date too but if the function depends on the previous state then we should not use the above method but instead do it in the form of a function\n  const dateHandler = event => {\n    setUserInput(prevState => {\n      return {\n        ...pre,\n        enteredDate: event.target.value\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"01-01-2020\",\n          max: \"31-12-2023\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n};\n_s(ExpenseForm, \"Z2lpwGRbC5rNGKYGuHr06MmHha8=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","userInput","setUserInput","titleHandler","event","target","value","amountHandler","dateHandler","prevState","pre"],"sources":["C:/Users/chhsy/OneDrive/Documents/My Projects/Web Development/React/Practice/expense-tracker/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = () =>{\r\n   \r\n\r\n\r\n    const [enteredTitle,setEnteredTitle] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const [enteredDate,setEnteredDate] = useState('');\r\n\r\n    // const titleHandler = (event) =>{\r\n    //     console.log(event.target.value);\r\n    //     setEnteredTitle(event.target.value)\r\n    // }\r\n    // const amountHandler = (event) =>{\r\n    //     console.log(event.target.value);\r\n    //     setEnteredAmount(event.target.value);\r\n    // }\r\n    // const dateHandler = (event) =>{\r\n    //     console.log(event.target.value);\r\n    //     setEnteredDate(event.target.value);\r\n    // }\r\n\r\n     // one way of writng the useState hook to call each state change individually and the other is to call all the state changes together as shown below\r\n    const [userInput,setUserInput] = useState({\r\n        enteredTitle:'',\r\n        enteredAmount: '',\r\n        enteredDate:'',\r\n    });\r\n    // another way to call the event listener function is the following for every function\r\n       const titleHandler = (event) =>{\r\n      setUserInput({\r\n        ...userInput,\r\n        enteredTitle:event.target.value,\r\n      })\r\n    }\r\n    const amountHandler = (event) =>{\r\n       setUserInput({\r\n        ...userInput,\r\n        enteredAmount:event.target.value,\r\n      })\r\n    }\r\n    // same for the date too but if the function depends on the previous state then we should not use the above method but instead do it in the form of a function\r\n    const dateHandler = (event) =>{\r\n       setUserInput( (prevState) =>{\r\n       return {...pre,\r\n        enteredDate:event.target.value,}\r\n      })\r\n    }\r\n    return (<form>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label >Title</label>\r\n                <input type=\"text\"  />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label >Amount</label>\r\n                <input type=\"number\" min='0.01' step='0.01'  />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label >Date</label>\r\n                <input type=\"date\" min='01-01-2020' max= '31-12-2023' />\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>)\r\n\r\n };\r\n\r\n\r\n    export default ExpenseForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,mBAAmB;AAAA;AAE1B,MAAMC,WAAW,GAAG,MAAK;EAAA;EAIrB,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAACI,aAAa,EAACC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACM,WAAW,EAACC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEC;EACD,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACtCE,YAAY,EAAC,EAAE;IACfE,aAAa,EAAE,EAAE;IACjBE,WAAW,EAAC;EAChB,CAAC,CAAC;EACF;EACG,MAAMI,YAAY,GAAIC,KAAK,IAAI;IAChCF,YAAY,CAAC;MACX,GAAGD,SAAS;MACZN,YAAY,EAACS,KAAK,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,aAAa,GAAIH,KAAK,IAAI;IAC7BF,YAAY,CAAC;MACZ,GAAGD,SAAS;MACZJ,aAAa,EAACO,KAAK,CAACC,MAAM,CAACC;IAC7B,CAAC,CAAC;EACJ,CAAC;EACD;EACA,MAAME,WAAW,GAAIJ,KAAK,IAAI;IAC3BF,YAAY,CAAGO,SAAS,IAAI;MAC5B,OAAO;QAAC,GAAGC,GAAG;QACbX,WAAW,EAACK,KAAK,CAACC,MAAM,CAACC;MAAM,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC;EACD,oBAAQ;IAAA,wBACJ;MAAK,SAAS,EAAC,uBAAuB;MAAA,wBAClC;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACjC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB,eACrB;UAAO,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACjC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACtB;UAAO,IAAI,EAAC,QAAQ;UAAC,GAAG,EAAC,MAAM;UAAC,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7C,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACjC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACpB;UAAO,IAAI,EAAC,MAAM;UAAC,GAAG,EAAC,YAAY;UAAC,GAAG,EAAE;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACtD;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACjC;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAnEGZ,WAAW;AAAA,KAAXA,WAAW;AAsEb,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}